package main

import (
	"log"
	"net/http"
	"os"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"github.com/gin-gonic/gin"
	"github.com/joho/godotenv"
)

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –±–æ—Ç–∞ (–¥–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø—Ä–∏–º–µ—Ä–∞)
var bot *tgbotapi.BotAPI

func main() {
	// 1. –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
	godotenv.Load()
	token := os.Getenv("BOT_TOKEN")
	if token == "" {
		log.Panic("BOT_TOKEN is not set")
	}

	// 2. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
	var err error
	bot, err = tgbotapi.NewBotAPI(token)
	if err != nil {
		log.Panic(err)
	}
	bot.Debug = true
	log.Printf("Authorized on account %s", bot.Self.UserName)

	// 3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Webhook URL
	// –í–ê–ñ–ù–û: –ó–ê–ú–ï–ù–ò–¢–ï "YOUR_APP_URL" –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ TimeWeb!
	// –ù–∞–ø—Ä–∏–º–µ—Ä: "https://my-cool-bot.timeweb.cloud"
	/*webhookURL := os.Getenv("WEBHOOK_URL") + "/webhook" // –ë—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã –Ω–∞ /webhook
	wh, err := tgbotapi.NewWebhook(webhookURL)
	if err != nil {
		log.Fatal(err)
	}*/
    webhookURL := os.Getenv("WEBHOOK_URL")
    if webhookURL == "" {
       log.Println("WARNING: WEBHOOK_URL is not set. Webhook will not be set. Waiting for configuration...")
    // –ú–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤–µ–±—Ö—É–∫–∞, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å URL
    // –ò–ª–∏ –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å –æ—à–∏–±–∫–æ–π, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ª–æ–≥–∏–∫–∏
    } else {
       wh, err := tgbotapi.NewWebhook(webhookURL + "/webhook")
       if err != nil {
           log.Fatal(err)
    }

	/* 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook'–∞ —É Telegram
	_, err = bot.Request(wh)
	if err != nil {
		log.Fatal(err)
	}*/
    // 4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook'–∞ —É Telegram
    _, err = bot.Request(wh)
    if err != nil {
        log.Fatal(err)  // –ë—ã–ª–æ log.Fatal(app) - —ç—Ç–æ –æ—à–∏–±–∫–∞!
    }
    log.Printf("Webhook set to: %s", webhookURL)
}

	// 5. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gin HTTP-—Å–µ—Ä–≤–µ—Ä–∞
	router := gin.Default()

	// –û—Ç–¥–∞–µ–º –∫–∞–∫—É—é-–Ω–∏–±—É–¥—å –∑–∞–≥–ª—É—à–∫—É –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —á—Ç–æ–±—ã —Ö–æ—Å—Ç–∏–Ω–≥ –≤–∏–¥–µ–ª, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∂–∏–≤–æ
	router.GET("/", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{"status": "ok", "message": "Telegram Bot is running!"})
	})

	// –≠—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π endpoint, –∫—É–¥–∞ Telegram –±—É–¥–µ—Ç –ø—Ä–∏—Å—ã–ª–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
	router.POST("/webhook", func(c *gin.Context) {
		// Gin –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–∞—Ä—Å–∏—Ç JSON –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä—É Update
		var update tgbotapi.Update
		if err := c.BindJSON(&update); err != nil {
			log.Printf("Error parsing update: %v", err)
			c.Status(http.StatusBadRequest)
			return
		}

		// –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∞–ø–¥–µ–π—Ç–∞ –≤ –≥–æ—Ä—É—Ç–∏–Ω–µ, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –æ—Ç–≤–µ—Ç–∏—Ç—å Telegram
		go handleUpdate(update)
		c.Status(http.StatusOK)
	})

	// 6. –ó–∞–ø—É—Å–∫ HTTP-—Å–µ—Ä–≤–µ—Ä–∞
	// –•–æ—Å—Ç–∏–Ω–≥ —Å–∞–º –ø–µ—Ä–µ–¥–∞—Å—Ç –Ω—É–∂–Ω—ã–π –ø–æ—Ä—Ç (—á–∞—Å—Ç–æ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è PORT)
	port := os.Getenv("PORT")
	if port == "" {
		port = "8080" // –ü–æ—Ä—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
	}
	router.Run(":" + port)
}

func handleUpdate(update tgbotapi.Update) {
	// –í–∞—à–∞ –ª–æ–≥–∏–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è —Å—é–¥–∞
	if update.Message != nil {
		handleMessage(update.Message)
	}
	// –ó–¥–µ—Å—å –∂–µ –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å CallbackQuery –æ—Ç –∫–Ω–æ–ø–æ–∫
}

func handleMessage(message *tgbotapi.Message) {
	log.Printf("[%s] %s", message.From.UserName, message.Text)

	// –°–æ–∑–¥–∞—ë–º –∫–Ω–æ–ø–∫–∏ (–∫–∞–∫ —É –≤–∞—Å –±—ã–ª–æ)
	buttons := tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonURL("üñ•Ô∏è 1 –ö–æ–º–ø—å—é—Ç–µ—Ä ‚òïüçî", "https://calendar.app.google/rzNw1mfuGbxvbGj16"),
			tgbotapi.NewInlineKeyboardButtonURL("üíª 2 –ö–æ–º–ø—å—é—Ç–µ—Ä üç∏üç∞", "https://calendar.app.google/puEEuwoG9AFGnQPe7"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonURL("üé∞ 3 –ö–æ–º–ø—å—é—Ç–µ—Ä üçπüå≠", "https://calendar.app.google/dJk6Q9d37t6zBdMu5"),
			tgbotapi.NewInlineKeyboardButtonURL("üïπÔ∏è 4 –ö–æ–º–ø—å—é—Ç–µ—Ä üßÉü•™", "https://calendar.app.google/..."),
		),
	)

	msg := tgbotapi.NewMessage(message.Chat.ID, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–ø—å—é—Ç–µ—Ä:")
	msg.ReplyMarkup = buttons

	_, err := bot.Send(msg)
	if err != nil {
		log.Printf("Error sending message: %v", err)
	}
}